// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`containers/PersonelInfoScreen should render 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      pointerEvents="box-none"
      style={
        Object {
          "zIndex": 1,
        }
      }
    >
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        onLayout={[Function]}
        pointerEvents="box-none"
        style={null}
      >
        <View
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "opacity": 1,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": 0,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "rgb(255, 255, 255)",
                "borderBottomColor": "rgb(216, 216, 216)",
                "flex": 1,
                "shadowColor": "rgb(216, 216, 216)",
                "shadowOffset": Object {
                  "height": 0.5,
                  "width": 0,
                },
                "shadowOpacity": 0.85,
                "shadowRadius": 0,
              }
            }
          />
        </View>
        <View
          pointerEvents="box-none"
          style={
            Object {
              "height": 64,
              "maxHeight": undefined,
              "minHeight": undefined,
              "opacity": undefined,
              "transform": undefined,
            }
          }
        >
          <View
            pointerEvents="none"
            style={
              Object {
                "height": 20,
              }
            }
          />
          <View
            pointerEvents="box-none"
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "marginHorizontal": 16,
                  "opacity": 1,
                }
              }
            >
              <Text
                accessibilityRole="header"
                aria-level="1"
                numberOfLines={1}
                onLayout={[Function]}
                style={
                  Object {
                    "color": "rgb(28, 28, 30)",
                    "fontSize": 17,
                    "fontWeight": "600",
                  }
                }
              >
                PI
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <RNSScreenContainer
      onLayout={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <RNSScreen
        activityState={2}
        forwardedRef={[Function]}
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          collapsable={false}
          style={
            Object {
              "opacity": 1,
            }
          }
        />
        <View
          accessibilityElementsHidden={false}
          closing={false}
          gestureVelocityImpact={0.3}
          importantForAccessibility="auto"
          onClose={[Function]}
          onGestureBegin={[Function]}
          onGestureCanceled={[Function]}
          onGestureEnd={[Function]}
          onOpen={[Function]}
          onTransition={[Function]}
          pointerEvents="box-none"
          style={
            Array [
              Object {
                "overflow": undefined,
              },
              Object {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
            ]
          }
          transitionSpec={
            Object {
              "close": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
              "open": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
            }
          }
        >
          <View
            needsOffscreenAlphaCompositing={false}
            pointerEvents="box-none"
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              collapsable={false}
              forwardedRef={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              style={
                Object {
                  "flex": 1,
                  "transform": Array [
                    Object {
                      "translateX": 0,
                    },
                    Object {
                      "translateX": 0,
                    },
                  ],
                }
              }
            >
              <View
                pointerEvents="none"
                style={
                  Object {
                    "backgroundColor": "rgb(242, 242, 242)",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "shadowColor": "#000",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": -1,
                    },
                    "shadowOpacity": 0.3,
                    "shadowRadius": 5,
                    "top": 0,
                    "width": 3,
                  }
                }
              />
              <View
                style={
                  Array [
                    Object {
                      "flex": 1,
                      "overflow": "hidden",
                    },
                    Array [
                      Object {
                        "backgroundColor": "rgb(242, 242, 242)",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                      "flexDirection": "column-reverse",
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <RCTSafeAreaView
                      emulateUnlessSupported={true}
                      style={
                        Array [
                          Object {
                            "flexBasis": 0,
                            "flexGrow": 1,
                            "flexShrink": 1,
                            "justifyContent": "center",
                            "marginBottom": 0,
                            "marginLeft": 16,
                            "marginRight": 16,
                            "marginTop": 0,
                          },
                        ]
                      }
                    >
                      <View>
                        <Text
                          style={
                            Array [
                              Object {
                                "fontSize": 30,
                                "fontWeight": "bold",
                                "textAlign": "center",
                              },
                            ]
                          }
                        >
                          Personal Info
                        </Text>
                        <TextInput
                          allowFontScaling={true}
                          onChangeText={[Function]}
                          placeholder="Full Name"
                          rejectResponderTermination={true}
                          style={
                            Array [
                              Object {
                                "borderBottomColor": "#b0adac",
                                "borderBottomWidth": 0.5,
                                "borderColor": "white",
                                "height": 40,
                                "marginTop": 50,
                              },
                            ]
                          }
                          underlineColorAndroid="transparent"
                          value=""
                        />
                        <TextInput
                          allowFontScaling={true}
                          onChangeText={[Function]}
                          placeholder="Occupation"
                          rejectResponderTermination={true}
                          style={
                            Array [
                              Object {
                                "borderBottomColor": "#b0adac",
                                "borderBottomWidth": 0.5,
                                "borderColor": "white",
                                "height": 40,
                                "marginTop": 50,
                              },
                            ]
                          }
                          underlineColorAndroid="transparent"
                        />
                        <View
                          style={
                            Array [
                              Object {
                                "borderBottomColor": "#b0adac",
                                "borderBottomWidth": 0.5,
                                "borderColor": "white",
                                "justifyContent": "space-between",
                                "marginTop": 50,
                              },
                            ]
                          }
                        >
                          <Text>
                            Language
                          </Text>
                          <View
                            style={
                              Array [
                                Object {
                                  "height": 40,
                                },
                                Object {
                                  "zIndex": 5000,
                                },
                              ]
                            }
                          >
                            <View
                              accessible={true}
                              focusable={true}
                              forwardedRef={[Function]}
                              onClick={[Function]}
                              onLayout={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                Object {
                                  "alignItems": "center",
                                  "backgroundColor": "#fff",
                                  "borderBottomLeftRadius": 5,
                                  "borderBottomRightRadius": 5,
                                  "borderColor": "#dfdfdf",
                                  "borderTopLeftRadius": 5,
                                  "borderTopRightRadius": 5,
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "flexDirection": "row",
                                  "height": 40,
                                  "opacity": 1,
                                  "paddingHorizontal": 10,
                                  "paddingVertical": 5,
                                  "right": 0,
                                }
                              }
                            >
                              <Text
                                style={
                                  Array [
                                    Object {
                                      "color": "#000",
                                    },
                                    Object {},
                                    Object {
                                      "flex": 1,
                                      "opacity": 1,
                                    },
                                    Object {
                                      "marginLeft": 5,
                                      "marginRight": 0,
                                    },
                                    Object {
                                      "marginLeft": 5,
                                    },
                                    Object {},
                                    Object {},
                                    false,
                                  ]
                                }
                              >
                                English
                              </Text>
                              <View
                                style={
                                  Array [
                                    Object {
                                      "alignItems": "center",
                                      "borderBottomLeftRadius": 0,
                                      "borderTopLeftRadius": 0,
                                      "flexDirection": "row",
                                      "justifyContent": "center",
                                      "paddingVertical": 8,
                                    },
                                  ]
                                }
                              >
                                <View
                                  style={
                                    Array [
                                      Object {},
                                      Object {
                                        "opacity": 1,
                                      },
                                    ]
                                  }
                                >
                                  <Text
                                    allowFontScaling={false}
                                    style={
                                      Array [
                                        Object {
                                          "color": "#000",
                                          "fontSize": 15,
                                        },
                                        undefined,
                                        Object {
                                          "fontFamily": "Feather",
                                          "fontStyle": "normal",
                                          "fontWeight": "normal",
                                        },
                                        Object {},
                                      ]
                                    }
                                  >
                                    
                                  </Text>
                                </View>
                              </View>
                            </View>
                            <View
                              style={
                                Array [
                                  Object {
                                    "alignItems": "center",
                                    "backgroundColor": "#fafafa",
                                    "borderBottomLeftRadius": 5,
                                    "borderBottomRightRadius": 5,
                                    "borderColor": "#dfdfdf",
                                    "borderTopLeftRadius": 0,
                                    "borderTopRightRadius": 0,
                                    "borderWidth": 1,
                                    "justifyContent": "center",
                                    "paddingHorizontal": 10,
                                    "paddingVertical": 5,
                                    "position": "absolute",
                                    "width": "100%",
                                  },
                                  Object {
                                    "borderWidth": 0,
                                    "display": "none",
                                    "position": "relative",
                                  },
                                  Object {
                                    "maxHeight": 150,
                                    "top": 0,
                                    "zIndex": 5000,
                                  },
                                ]
                              }
                            >
                              <RCTScrollView
                                nestedScrollEnabled={true}
                                style={
                                  Object {
                                    "width": "100%",
                                  }
                                }
                              >
                                <View>
                                  <View
                                    accessible={true}
                                    onLayout={[Function]}
                                    testID="english-selected"
                                  >
                                    <View
                                      accessible={true}
                                      focusable={true}
                                      onClick={[Function]}
                                      onResponderGrant={[Function]}
                                      onResponderMove={[Function]}
                                      onResponderRelease={[Function]}
                                      onResponderTerminate={[Function]}
                                      onResponderTerminationRequest={[Function]}
                                      onStartShouldSetResponder={[Function]}
                                      style={
                                        Object {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "justifyContent": "flex-start",
                                          "opacity": 1,
                                          "paddingVertical": 8,
                                          "width": "100%",
                                        }
                                      }
                                    >
                                      <View
                                        style={
                                          Object {
                                            "alignContent": "center",
                                            "flexDirection": "row",
                                            "justifyContent": "flex-start",
                                          }
                                        }
                                      >
                                        <View
                                          style={
                                            Object {
                                              "justifyContent": "center",
                                            }
                                          }
                                        />
                                        <Text
                                          style={
                                            Array [
                                              Object {},
                                              Object {},
                                              undefined,
                                              Object {},
                                              Object {},
                                            ]
                                          }
                                        >
                                          English
                                        </Text>
                                      </View>
                                    </View>
                                  </View>
                                  <View
                                    accessible={true}
                                    onLayout={[Function]}
                                    testID="polish"
                                  >
                                    <View
                                      accessible={true}
                                      focusable={true}
                                      onClick={[Function]}
                                      onResponderGrant={[Function]}
                                      onResponderMove={[Function]}
                                      onResponderRelease={[Function]}
                                      onResponderTerminate={[Function]}
                                      onResponderTerminationRequest={[Function]}
                                      onStartShouldSetResponder={[Function]}
                                      style={
                                        Object {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "justifyContent": "flex-start",
                                          "opacity": 1,
                                          "paddingVertical": 8,
                                          "width": "100%",
                                        }
                                      }
                                    >
                                      <View
                                        style={
                                          Object {
                                            "alignContent": "center",
                                            "flexDirection": "row",
                                            "justifyContent": "flex-start",
                                          }
                                        }
                                      >
                                        <View
                                          style={
                                            Object {
                                              "justifyContent": "center",
                                            }
                                          }
                                        />
                                        <Text
                                          style={
                                            Array [
                                              Object {},
                                              Object {},
                                              undefined,
                                              false,
                                              Object {},
                                            ]
                                          }
                                        >
                                          Polish
                                        </Text>
                                      </View>
                                    </View>
                                  </View>
                                </View>
                              </RCTScrollView>
                            </View>
                          </View>
                        </View>
                        <View
                          accessible={true}
                          focusable={true}
                          onClick={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Array [
                              Object {
                                "alignItems": "center",
                                "backgroundColor": "#1b8ffa",
                                "borderRadius": 10,
                                "height": 50,
                                "justifyContent": "center",
                                "marginTop": 100,
                              },
                            ]
                          }
                        >
                          <Text
                            style={
                              Array [
                                Object {
                                  "color": "#ffffff",
                                },
                              ]
                            }
                          >
                            SAVE
                          </Text>
                        </View>
                      </View>
                    </RCTSafeAreaView>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </RNSScreen>
    </RNSScreenContainer>
  </RNCSafeAreaProvider>
</View>
`;
